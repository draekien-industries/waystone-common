// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Waystone.Sample.Infrastructure.Shared;

#nullable disable

namespace Waystone.Sample.Infrastructure.Migrations
{
    [DbContext(typeof(SampleDbContext))]
    [Migration("20230108073143_CreateUsersTable")]
    partial class CreateUsersTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Waystone.Sample.Domain.Products.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1280)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1280)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Name" }, "UIX_Products_Name")
                        .IsUnique();

                    b.ToTable("Products");
                });

            modelBuilder.Entity("Waystone.Sample.Domain.Users.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasMaxLength(1280)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1280)");

                    b.Property<bool>("EmailVerified")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "EmailAddress" }, "UIX_Users_EmailAddress")
                        .IsUnique();

                    b.HasIndex(new[] { "Username" }, "UIX_Users_Username")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Waystone.Sample.Domain.Products.Product", b =>
                {
                    b.OwnsOne("Waystone.Sample.Domain.Prices.Price", "Price", b1 =>
                        {
                            b1.Property<Guid>("ProductId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<decimal>("AmountExcludingTax")
                                .HasPrecision(18)
                                .HasColumnType("decimal(18,2)")
                                .HasColumnName("AmountExcludingTax");

                            b1.Property<decimal>("DiscountPercentage")
                                .HasPrecision(18)
                                .HasColumnType("decimal(18,2)")
                                .HasColumnName("DiscountPercentage");

                            b1.Property<decimal>("TaxPercentage")
                                .HasPrecision(18)
                                .HasColumnType("decimal(18,2)")
                                .HasColumnName("TaxPercentage");

                            b1.HasKey("ProductId");

                            b1.ToTable("Products");

                            b1.WithOwner()
                                .HasForeignKey("ProductId");
                        });

                    b.Navigation("Price")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
