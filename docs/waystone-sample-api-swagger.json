{
  "x-generator": "NSwag v13.18.0.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))",
  "openapi": "3.0.0",
  "info": {
    "title": "Waystone.Sample.Api",
    "description": "A sample API built with Waystone.Common.Api",
    "version": "v1"
  },
  "paths": {
    "/weatherforecast": {
      "get": {
        "tags": [
          "WeatherForecast"
        ],
        "summary": "Gets a set of weather forecasts.",
        "operationId": "WeatherForecast_Get",
        "parameters": [
          {
            "name": "DesiredSummary",
            "in": "query",
            "description": "When specified, the weather forecasts found will only have the specified summary.",
            "schema": {
              "nullable": true,
              "oneOf": [
                {
                  "$ref": "#/components/schemas/ForecastSummary"
                }
              ]
            },
            "x-position": 1
          },
          {
            "name": "MinimumTemperatureC",
            "in": "query",
            "description": "When specified, the weather forecasts found will all have TemperatureC above this value.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "MaximumTemperatureC",
            "in": "query",
            "description": "When specified, the weather forecasts found will all have TemperatureC below this value.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "x-position": 3
          },
          {
            "name": "Limit",
            "in": "query",
            "description": "The maximum number of records to return;",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 10
            },
            "x-position": 4
          },
          {
            "name": "Cursor",
            "in": "query",
            "description": "The offset (from 0) of the first record to return;",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 0
            },
            "x-position": 5
          },
          {
            "name": "X-Correlation-ID",
            "in": "header",
            "description": "The correlation id to be associated with the request. One will be generated by the API if not provided.",
            "schema": {
              "type": "string",
              "format": "guid",
              "example": "72b264f5-d6e9-4e74-a6ce-d398e2c8421a"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnknownProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "The paginated list of WeatherForecastDto.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedResponseOfWeatherForecastDto"
                }
              }
            }
          }
        }
      }
    },
    "/weatherforecast/{id}": {
      "get": {
        "tags": [
          "WeatherForecast"
        ],
        "summary": "Gets a weather forecast by it's id.",
        "operationId": "WeatherForecast_GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The id of the forecast.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "X-Correlation-ID",
            "in": "header",
            "description": "The correlation id to be associated with the request. One will be generated by the API if not provided.",
            "schema": {
              "type": "string",
              "format": "guid",
              "example": "72b264f5-d6e9-4e74-a6ce-d398e2c8421a"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnknownProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "The WeatherForecastDto",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WeatherForecastDto"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "NotFoundProblemDetails": {
        "allOf": [
          {
            "$ref": "#/components/schemas/StatusCodeProblemDetails"
          },
          {
            "type": "object",
            "description": "Not found problem details.",
            "additionalProperties": {
              "nullable": true
            }
          }
        ]
      },
      "StatusCodeProblemDetails": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ProblemDetails"
          },
          {
            "type": "object",
            "additionalProperties": {
              "nullable": true
            }
          }
        ]
      },
      "ProblemDetails": {
        "type": "object",
        "additionalProperties": {
          "nullable": true
        },
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          },
          "extensions": {
            "type": "object",
            "additionalProperties": {}
          }
        }
      },
      "UnknownProblemDetails": {
        "allOf": [
          {
            "$ref": "#/components/schemas/StatusCodeProblemDetails"
          },
          {
            "type": "object",
            "description": "Internal server error problem details.",
            "additionalProperties": {
              "nullable": true
            }
          }
        ]
      },
      "PaginatedResponseOfWeatherForecastDto": {
        "type": "object",
        "description": "Represents a page of records.",
        "additionalProperties": false,
        "properties": {
          "links": {
            "description": "The previous, current, and next page Links.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Links"
              }
            ]
          },
          "total": {
            "type": "integer",
            "description": "The total number of records available.",
            "format": "int32",
            "example": 100
          },
          "results": {
            "type": "array",
            "description": "The current page of records.",
            "items": {
              "$ref": "#/components/schemas/WeatherForecastDto"
            }
          }
        }
      },
      "Links": {
        "type": "object",
        "description": "The links used to navigate between pages in a paginated collection.",
        "additionalProperties": false,
        "properties": {
          "self": {
            "type": "string",
            "description": "The URI link to the current page of results.",
            "format": "uri",
            "nullable": true
          },
          "next": {
            "type": "string",
            "description": "The URI link to the next page of results if it exists.",
            "format": "uri",
            "nullable": true
          },
          "previous": {
            "type": "string",
            "description": "The URI link to the previous page of results if it exists.",
            "format": "uri",
            "nullable": true
          }
        }
      },
      "WeatherForecastDto": {
        "type": "object",
        "description": "A weather forecast.",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "description": "The id of the forecast.",
            "format": "guid"
          },
          "temperatureC": {
            "type": "integer",
            "description": "The temperature in Celsius.",
            "format": "int32"
          },
          "temperatureF": {
            "type": "integer",
            "description": "The temperature in Fahrenheit.",
            "format": "int32"
          },
          "summary": {
            "description": "The summary of the forecast.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/ForecastSummary"
              }
            ]
          },
          "dateTime": {
            "type": "string",
            "description": "The date of the forecast.",
            "format": "date-time"
          }
        }
      },
      "ForecastSummary": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "Freezing",
          "Bracing",
          "Chilly",
          "Cool",
          "Mild",
          "Warm",
          "Balmy",
          "Hot",
          "Sweltering",
          "Scorching"
        ],
        "enum": [
          "Freezing",
          "Bracing",
          "Chilly",
          "Cool",
          "Mild",
          "Warm",
          "Balmy",
          "Hot",
          "Sweltering",
          "Scorching"
        ]
      }
    }
  }
}